# Generated by Django 4.2.23 on 2025-08-25 13:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("users", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("courses", "0001_initial"),
        ("student", "0001_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="quizattempt",
            name="student",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="quiz_attempts",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="quiz",
            name="lesson",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="quiz",
                to="courses.lesson",
            ),
        ),
        migrations.AddField(
            model_name="question",
            name="quiz",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="questions",
                to="courses.quiz",
            ),
        ),
        migrations.AddField(
            model_name="note",
            name="course",
            field=models.ForeignKey(
                help_text="Course this note belongs to",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="notes",
                to="courses.course",
            ),
        ),
        migrations.AddField(
            model_name="note",
            name="lesson",
            field=models.ForeignKey(
                blank=True,
                help_text="Optional lesson this note is linked to",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="notes",
                to="courses.lesson",
            ),
        ),
        migrations.AddField(
            model_name="note",
            name="teacher",
            field=models.ForeignKey(
                help_text="Teacher who created this note",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="course_notes",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="lessonprogress",
            name="enrollment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="lesson_progress",
                to="courses.courseenrollment",
            ),
        ),
        migrations.AddField(
            model_name="lessonprogress",
            name="lesson",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="courses.lesson"
            ),
        ),
        migrations.AddField(
            model_name="lesson",
            name="course",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="lessons",
                to="courses.course",
            ),
        ),
        migrations.AddField(
            model_name="lesson",
            name="prerequisites",
            field=models.ManyToManyField(
                blank=True,
                help_text="Lessons that must be completed before this one",
                to="courses.lesson",
            ),
        ),
        migrations.AddField(
            model_name="coursereview",
            name="course",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="reviews",
                to="courses.course",
            ),
        ),
        migrations.AddField(
            model_name="courseenrollment",
            name="course",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="enrollments",
                to="courses.course",
            ),
        ),
        migrations.AddField(
            model_name="courseenrollment",
            name="current_lesson",
            field=models.ForeignKey(
                blank=True,
                help_text="Current lesson the student is on",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="courses.lesson",
            ),
        ),
        migrations.AddField(
            model_name="courseenrollment",
            name="student",
            field=models.ForeignKey(
                limit_choices_to={"role": "student"},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="course_enrollments",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="course",
            name="enrolled_students",
            field=models.ManyToManyField(
                blank=True,
                help_text="Students enrolled in this course",
                related_name="enrolled_courses",
                through="student.EnrolledCourse",
                to="users.studentprofile",
            ),
        ),
        migrations.AddField(
            model_name="course",
            name="prerequisites",
            field=models.ManyToManyField(
                blank=True,
                help_text="Required courses before taking this course",
                to="courses.course",
            ),
        ),
        migrations.AddField(
            model_name="course",
            name="teacher",
            field=models.ForeignKey(
                limit_choices_to={"role": "teacher"},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="created_courses",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="classevent",
            name="class_instance",
            field=models.ForeignKey(
                help_text="The class this event belongs to",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="events",
                to="courses.class",
            ),
        ),
        migrations.AddField(
            model_name="classevent",
            name="lesson",
            field=models.ForeignKey(
                blank=True,
                help_text="Associated lesson (if event type is lesson)",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="courses.lesson",
            ),
        ),
        migrations.AddField(
            model_name="class",
            name="course",
            field=models.ForeignKey(
                help_text="The course this class is based on",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="classes",
                to="courses.course",
            ),
        ),
        migrations.AddField(
            model_name="class",
            name="students",
            field=models.ManyToManyField(
                blank=True,
                help_text="Students enrolled in this class",
                limit_choices_to={"role": "student"},
                related_name="enrolled_classes",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="class",
            name="teacher",
            field=models.ForeignKey(
                help_text="Teacher managing this class",
                limit_choices_to={"role": "teacher"},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="taught_classes",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddIndex(
            model_name="quizattempt",
            index=models.Index(
                fields=["student", "quiz"], name="courses_qui_student_76b4a8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="quizattempt",
            index=models.Index(
                fields=["enrollment", "completed_at"],
                name="courses_qui_enrollm_9f4292_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="quizattempt",
            unique_together={("student", "quiz", "attempt_number")},
        ),
        migrations.AddIndex(
            model_name="question",
            index=models.Index(
                fields=["quiz", "order"], name="courses_que_quiz_id_d60549_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="question",
            index=models.Index(fields=["type"], name="courses_que_type_db2fd3_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="question",
            unique_together={("quiz", "order")},
        ),
        migrations.AddIndex(
            model_name="note",
            index=models.Index(
                fields=["course", "teacher"], name="courses_not_course__cbe6db_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="note",
            index=models.Index(
                fields=["lesson", "category"], name="courses_not_lesson__c45088_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="note",
            index=models.Index(
                fields=["-updated_at"], name="courses_not_updated_c72813_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="lessonprogress",
            index=models.Index(
                fields=["enrollment", "status"], name="courses_les_enrollm_4c2337_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="lessonprogress",
            index=models.Index(
                fields=["lesson", "status"], name="courses_les_lesson__30e92d_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="lessonprogress",
            unique_together={("enrollment", "lesson")},
        ),
        migrations.AddIndex(
            model_name="lesson",
            index=models.Index(
                fields=["course", "order"], name="courses_les_course__dc0bc6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="lesson",
            index=models.Index(fields=["type"], name="courses_les_type_805272_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="lesson",
            unique_together={("course", "order")},
        ),
        migrations.AddIndex(
            model_name="coursereview",
            index=models.Index(
                fields=["course", "-created_at"], name="courses_cou_course__845eb3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="coursereview",
            index=models.Index(
                fields=["course", "is_featured"], name="courses_cou_course__55c370_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="coursereview",
            index=models.Index(fields=["rating"], name="courses_cou_rating_4bf87d_idx"),
        ),
        migrations.AddIndex(
            model_name="courseenrollment",
            index=models.Index(
                fields=["student", "status"], name="courses_cou_student_5a794f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="courseenrollment",
            index=models.Index(
                fields=["course", "status"], name="courses_cou_course__4e6f05_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="courseenrollment",
            unique_together={("student", "course")},
        ),
        migrations.AddIndex(
            model_name="course",
            index=models.Index(
                fields=["status", "featured"], name="courses_cou_status_c6495b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="course",
            index=models.Index(
                fields=["teacher", "status"], name="courses_cou_teacher_cff768_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="course",
            index=models.Index(
                fields=["category"], name="courses_cou_categor_fec4a4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="classevent",
            index=models.Index(
                fields=["class_instance", "start_time"],
                name="class_event_class_i_4ce758_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="classevent",
            index=models.Index(
                fields=["event_type"], name="class_event_event_t_4c8a97_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="classevent",
            index=models.Index(
                fields=["start_time"], name="class_event_start_t_44477f_idx"
            ),
        ),
    ]
