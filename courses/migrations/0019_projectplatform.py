# Generated by Django 4.2.24 on 2025-09-27 12:03

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):
    dependencies = [
        (
            "courses",
            "0018_assignment_alter_question_type_assignmentsubmission_and_more",
        ),
    ]

    operations = [
        migrations.CreateModel(
            name="ProjectPlatform",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Internal name (e.g., 'scratch', 'replit')",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "display_name",
                    models.CharField(
                        help_text="User-friendly display name (e.g., 'Scratch Programming Platform')",
                        max_length=150,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Detailed description of the platform and its capabilities"
                    ),
                ),
                (
                    "platform_type",
                    models.CharField(
                        help_text="Category of the platform (e.g., 'Visual Programming', 'Online IDE', 'Design Tool')",
                        max_length=50,
                    ),
                ),
                (
                    "base_url",
                    models.URLField(
                        help_text="Base URL of the platform (e.g., https://scratch.mit.edu)"
                    ),
                ),
                (
                    "api_endpoint",
                    models.URLField(
                        blank=True,
                        help_text="API endpoint for integration (if available)",
                    ),
                ),
                (
                    "supported_languages",
                    models.JSONField(
                        default=list,
                        help_text="List of supported programming languages",
                    ),
                ),
                (
                    "requires_authentication",
                    models.BooleanField(
                        default=True,
                        help_text="Does this platform require user authentication?",
                    ),
                ),
                (
                    "supports_collaboration",
                    models.BooleanField(
                        default=False,
                        help_text="Does this platform support real-time collaboration?",
                    ),
                ),
                (
                    "supports_file_upload",
                    models.BooleanField(
                        default=True,
                        help_text="Can users upload files to this platform?",
                    ),
                ),
                (
                    "supports_live_preview",
                    models.BooleanField(
                        default=True,
                        help_text="Does this platform support live preview of work?",
                    ),
                ),
                (
                    "supports_version_control",
                    models.BooleanField(
                        default=False,
                        help_text="Does this platform support version control/git?",
                    ),
                ),
                (
                    "platform_config",
                    models.JSONField(
                        default=dict,
                        help_text="Platform-specific configuration and settings",
                    ),
                ),
                (
                    "icon",
                    models.CharField(
                        help_text="Icon identifier for UI display", max_length=50
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        help_text="Hex color code for branding", max_length=7
                    ),
                ),
                (
                    "logo_url",
                    models.URLField(blank=True, help_text="URL to platform logo image"),
                ),
                (
                    "min_age",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Minimum recommended age for this platform",
                        null=True,
                    ),
                ),
                (
                    "max_age",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Maximum recommended age for this platform",
                        null=True,
                    ),
                ),
                (
                    "skill_levels",
                    models.JSONField(
                        default=list,
                        help_text="Supported skill levels (e.g., ['beginner', 'intermediate', 'advanced'])",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Is this platform currently available?"
                    ),
                ),
                (
                    "is_featured",
                    models.BooleanField(
                        default=False,
                        help_text="Should this platform be featured prominently?",
                    ),
                ),
                (
                    "is_free",
                    models.BooleanField(
                        default=True, help_text="Is this platform free to use?"
                    ),
                ),
                (
                    "usage_count",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Number of times this platform has been used",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-is_featured", "display_name"],
                "indexes": [
                    models.Index(
                        fields=["platform_type"], name="courses_pro_platfor_77200f_idx"
                    ),
                    models.Index(
                        fields=["is_active"], name="courses_pro_is_acti_5b21a6_idx"
                    ),
                    models.Index(
                        fields=["is_featured"], name="courses_pro_is_feat_e29bc0_idx"
                    ),
                ],
            },
        ),
    ]
