# Generated by Django 4.2.24 on 2025-10-21 17:02

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("settings", "0004_coursesettings_who_sets_price"),
    ]

    operations = [
        migrations.AddField(
            model_name="userdashboardsettings",
            name="auto_grade_multiple_choice",
            field=models.BooleanField(
                default=False,
                help_text="Automatically grade multiple choice questions when students submit (teachers only)",
            ),
        ),
        migrations.AddField(
            model_name="userdashboardsettings",
            name="default_assignment_points",
            field=models.PositiveIntegerField(
                default=5,
                help_text="Default points for new assignment questions (teachers only)",
            ),
        ),
        migrations.AddField(
            model_name="userdashboardsettings",
            name="default_course_passing_score",
            field=models.PositiveIntegerField(
                default=70,
                help_text="Default passing score percentage for courses and quizzes (teachers only)",
                validators=[
                    django.core.validators.MinValueValidator(0),
                    django.core.validators.MaxValueValidator(100),
                ],
            ),
        ),
        migrations.AddField(
            model_name="userdashboardsettings",
            name="default_quiz_points",
            field=models.PositiveIntegerField(
                default=1,
                help_text="Default points for new quiz questions (teachers only)",
            ),
        ),
        migrations.AddField(
            model_name="userdashboardsettings",
            name="default_quiz_time_limit",
            field=models.PositiveIntegerField(
                default=10,
                help_text="Default time limit in minutes for new quizzes (teachers only)",
            ),
        ),
        migrations.AddField(
            model_name="userdashboardsettings",
            name="show_correct_answers_by_default",
            field=models.BooleanField(
                default=True,
                help_text="Show correct answers to students after quiz completion by default (teachers only)",
            ),
        ),
        migrations.AddField(
            model_name="userdashboardsettings",
            name="user_type",
            field=models.CharField(
                choices=[("student", "Student"), ("teacher", "Teacher")],
                default="student",
                help_text="Type of user - determines which settings are applicable",
                max_length=10,
            ),
        ),
        migrations.AlterField(
            model_name="userdashboardsettings",
            name="theme_preference",
            field=models.CharField(
                choices=[
                    ("light", "Light Theme"),
                    ("dark", "Dark Theme"),
                    ("system", "System"),
                ],
                default="system",
                help_text="Dashboard theme preference",
                max_length=20,
            ),
        ),
    ]
