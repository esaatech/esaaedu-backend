# Generated by Django 4.2.23 on 2025-08-23 01:34

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    dependencies = [
        ("courses", "0007_class"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("users", "0002_studentprofile_child_email_and_more"),
        ("student", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="EnrolledCourse",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("enrollment_date", models.DateField(auto_now_add=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("completed", "Completed"),
                            ("dropped", "Dropped"),
                            ("paused", "Paused"),
                            ("pending", "Pending Approval"),
                            ("suspended", "Suspended"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                (
                    "progress_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Overall course completion percentage",
                        max_digits=5,
                    ),
                ),
                ("completed_lessons_count", models.PositiveIntegerField(default=0)),
                ("total_lessons_count", models.PositiveIntegerField(default=0)),
                (
                    "overall_grade",
                    models.CharField(
                        blank=True,
                        help_text="Overall letter grade (A+, B, C, etc.)",
                        max_length=2,
                    ),
                ),
                (
                    "gpa_points",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="GPA points for this course",
                        max_digits=3,
                        null=True,
                    ),
                ),
                (
                    "average_quiz_score",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("total_assignments_completed", models.PositiveIntegerField(default=0)),
                ("total_assignments_assigned", models.PositiveIntegerField(default=0)),
                (
                    "total_study_time",
                    models.DurationField(
                        default=datetime.timedelta,
                        help_text="Total time spent studying this course",
                    ),
                ),
                (
                    "last_accessed",
                    models.DateTimeField(
                        blank=True,
                        help_text="Last time student accessed the course",
                        null=True,
                    ),
                ),
                (
                    "login_count",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Number of times student logged into this course",
                    ),
                ),
                (
                    "total_video_watch_time",
                    models.DurationField(
                        default=datetime.timedelta,
                        help_text="Total video content watched",
                    ),
                ),
                (
                    "payment_status",
                    models.CharField(
                        choices=[
                            ("paid", "Paid"),
                            ("pending", "Pending"),
                            ("overdue", "Overdue"),
                            ("scholarship", "Scholarship"),
                            ("free", "Free"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "amount_paid",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Amount paid for this course",
                        max_digits=10,
                    ),
                ),
                ("payment_due_date", models.DateField(blank=True, null=True)),
                (
                    "discount_applied",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Discount percentage applied",
                        max_digits=5,
                    ),
                ),
                (
                    "completion_date",
                    models.DateField(
                        blank=True,
                        help_text="Date when course was completed",
                        null=True,
                    ),
                ),
                (
                    "certificate_issued",
                    models.BooleanField(
                        default=False,
                        help_text="Whether completion certificate was issued",
                    ),
                ),
                (
                    "certificate_url",
                    models.URLField(
                        blank=True, help_text="URL to download the certificate"
                    ),
                ),
                ("final_grade_issued", models.BooleanField(default=False)),
                (
                    "parent_notifications_enabled",
                    models.BooleanField(
                        default=True, help_text="Send progress notifications to parents"
                    ),
                ),
                (
                    "reminder_emails_enabled",
                    models.BooleanField(
                        default=True,
                        help_text="Send reminder emails for assignments/classes",
                    ),
                ),
                (
                    "special_accommodations",
                    models.TextField(
                        blank=True,
                        help_text="Special learning accommodations for this student",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_progress_update", models.DateTimeField(auto_now=True)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="student_enrollments",
                        to="courses.course",
                    ),
                ),
                (
                    "current_lesson",
                    models.ForeignKey(
                        blank=True,
                        help_text="Current lesson the student is working on",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="current_students",
                        to="courses.lesson",
                    ),
                ),
                (
                    "enrolled_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="Teacher or admin who enrolled the student",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="enrolled_students",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "student_profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="course_enrollments",
                        to="users.studentprofile",
                    ),
                ),
            ],
            options={
                "db_table": "enrolled_courses",
                "ordering": ["-enrollment_date"],
                "indexes": [
                    models.Index(
                        fields=["student_profile", "status"],
                        name="enrolled_co_student_e5b83f_idx",
                    ),
                    models.Index(
                        fields=["course", "status"],
                        name="enrolled_co_course__6e348a_idx",
                    ),
                    models.Index(
                        fields=["enrollment_date"],
                        name="enrolled_co_enrollm_d44cbf_idx",
                    ),
                    models.Index(
                        fields=["last_accessed"], name="enrolled_co_last_ac_cced70_idx"
                    ),
                ],
                "unique_together": {("student_profile", "course")},
            },
        ),
    ]
